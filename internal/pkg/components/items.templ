package components

import (
	"fmt"

	"github.com/bradydean/go-website/internal/pkg/profile"
)

type Item struct {
	ItemID     int64
	Content    string
	IsComplete bool
	Url        string
}

templ ListItem(item Item) {
	<li id={ fmt.Sprintf("item-%d", item.ItemID) }>
		<div class="flex">
			<input
				hx-patch={ item.Url }
				hx-trigger="change"
				hx-target={ fmt.Sprintf("#item-%d", item.ItemID) }
				type="checkbox"
				class="checkbox"
				hx-swap="outerHTML"
				hx-vals='js:{"is_complete": event.target.checked}'
				if item.IsComplete {
					checked
				}
			/>
			<input
				class="input grow"
				hx-patch={ item.Url }
				hx-trigger="keyup[target.value.length > 0] changed delay:500ms"
				hx-target={ fmt.Sprintf("#item-%d", item.ItemID) }
				hx-swap="outerHTML"
				type="text"
				name="content"
				maxlength="50"
				autocomplete="off"
				value={ item.Content }
			/>
			<button
				class="btn btn-sm"
				hx-delete={ item.Url }
				hx-confirm="Are you sure you want to delete this item?"
				hx-target={ fmt.Sprintf("#item-%d", item.ItemID) }
				hx-swap="outerHTML"
			>
				Delete	
			</button>
		</div>
	</li>
}

templ Items(profile profile.Profile, title, description string, items []Item) {
	@Navbar(&profile)
	<main>
		<div class="flex justify-center">
			<ul class="menu bg-base-200 rounded-box text-xl">
				<div class="grid grid-cols-2 gap-2">
					<li class="menu-title">{ title }</li>
					if len(description) != 0 {
						<li class="menu-title items-end">{ description }</li>
					}
				</div>
				for _, item := range items {
					@ListItem(item)
				}
			</ul>
		</div>
	</main>
}
