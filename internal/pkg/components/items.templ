package components

import (
	"fmt"

	"github.com/bradydean/go-website/internal/pkg/profile"
)

type Item struct {
	ItemID     int64
	Content    string
	IsComplete bool
	Url        string
}

script openNewItemModal() {
	new_item_modal.showModal()
}

script closeModal() {
	document.addEventListener("htmx:afterRequest", function(event) {
		if (event.detail.target.id == "item-list" && event.detail.successful) {
			new_item_modal.close()
			document.getElementById("content-input").value = ""
		}
	})
}

templ newItemModal(list List) {
	@closeModal()
	<dialog id="new_item_modal" class="modal">
		<form method="dialog" class="modal-backdrop">
			<button>close</button>
		</form>
		<div class="modal-box">
			<form
				hx-post={ string(templ.URL(list.Url + "/items")) }
				hx-target="#item-list"
				hx-swap="beforeend"
				method="dialog"
			>
				<div class="grid grid-cols-6 gap-2">
					<p class="col-span-6">Enter a new todo list item.</p>
					<input id="content-input" class="input input-bordered col-span-6" type="text" autocomplete="off" name="content" placeholder="Content" maxlength="50" required/>
					<button class="btn btn-sm grid-span-1 col-start-6">Create</button>
				</div>
			</form>
		</div>
	</dialog>
}

templ ListItem(item Item) {
	<li id={ fmt.Sprintf("item-%d", item.ItemID) }>
		<div class="flex">
			<input
				hx-patch={ item.Url }
				hx-trigger="change"
				hx-target={ fmt.Sprintf("#item-%d", item.ItemID) }
				type="checkbox"
				class="checkbox"
				hx-swap="outerHTML"
				hx-vals='js:{"is_complete": event.target.checked}'
				if item.IsComplete {
					checked
				}
			/>
			<input
				class="input grow"
				hx-patch={ string(templ.URL(item.Url)) }
				hx-trigger="keyup[target.value.length > 0] changed delay:500ms"
				hx-target={ fmt.Sprintf("#item-%d", item.ItemID) }
				hx-swap="outerHTML"
				type="text"
				name="content"
				maxlength="50"
				autocomplete="off"
				value={ item.Content }
			/>
			<button
				class="btn btn-sm"
				hx-delete={ string(templ.URL(item.Url)) }
				hx-confirm="Are you sure you want to delete this item?"
				hx-target={ fmt.Sprintf("#item-%d", item.ItemID) }
				hx-swap="outerHTML"
			>
				Delete	
			</button>
		</div>
	</li>
}

templ Items(profile profile.Profile, list List, items []Item) {
	@Navbar(&profile)
	<main>
		@newItemModal(list)
		<div class="flex justify-center">
			<div class="menu bg-base-200 rounded-box text-xl">
				<ul id="item-list">
					<div class="grid grid-cols-2 gap-2">
						<li class="menu-title">{ list.Title }</li>
						if len(list.Description) != 0 {
							<li class="menu-title items-end">{ list.Description }</li>
						}
					</div>
					for _, item := range items {
						@ListItem(item)
					}
				</ul>
				<div class="flex justify-end">
					<button
						class="btn btn-sm"
						onClick={ openNewItemModal() }
					>
						New Item
					</button>
				</div>
			</div>
		</div>
	</main>
}
